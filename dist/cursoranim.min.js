/*!
 * CursorAnim.js
 * https://github.com/TeKrop/cursoranim
 *
 * Copyright 2015 Valentin PORCHET
 * Released under the MIT license
 */
var CursorAnim=function(){var mousePosition=null,isDragging=!1,elementDragged=null,lastTargettedElement=null,animating=!1,correctEvents=["move","click","drag","drop","wait"],cursor=null,overlay=null,animationDuration=1e3,animationEasing="easeInOutCubic",animationCursor="cursor_default.gif",events=null;$(document).on("mousemove",function(n){n.which||(mousePosition={x:n.pageX,y:n.pageY})});var onDragCustomEvent=function(n,t){t.position.left=cursor.offset().left-elementDragged.width()/2-cursor.width(),t.position.top=cursor.offset().top-elementDragged.height()/2-cursor.height()},loadProcess=function(n){var t=null,o=null;if(void 0!==typeof n){if("string"==typeof n)if(-1!==n.indexOf(".json",n.length-5))$.ajax({url:n,async:!1,dataType:"json",success:function(n){o=n}});else try{o=JSON.parse(n)}catch(e){throw console.error(e.name+" : "+e.message),new TypeError("Your string doesn't contain valid json data.")}else{if("Array"!=typeof n)throw console.log(typeof n),new TypeError("CursorAnim data must be in json format, either by filename, string or array.");o=n}return t=convertDataToEvents(o)}return console.warn("No data was passed, keeping the old data (null of just initialized"),events},convertDataToEvents=function(jsonData){var actions=[];actions.push(hideCursor);for(var i=0;i<jsonData.length;i++)if("action"in jsonData[i])if(eval("typeof "+jsonData[i].action+" === 'function'")&&correctEvents.indexOf(jsonData[i].action)>-1){var functionContent="return CursorAnim."+jsonData[i].action+"(";functionContent+="options"in jsonData[i]?JSON.stringify(jsonData[i].options)+", ":"{}, ",functionContent+="callback);",actions.push(new Function("callback",functionContent))}else console.warn("The event '"+jsonData[i].action+"' doesn't exist. Skipping it.");else console.warn("Incorrect event : no action was provided. Skipping it.");return actions.push(returnToMousePosition,showCursor),actions},hideCursor=function(n){$("body").css("cursor","none"),$("body").append('<img id="cursorAnim" alt="cursor animation" src="'+animationCursor+'"/>'),$("body").append('<div id="overlayCursorAnim"></div>'),cursor=$("#cursorAnim"),overlay=$("#overlayCursorAnim"),cursor.css({top:mousePosition.y,left:mousePosition.x}),n()},showCursor=function(n){$("body").css({cursor:"default"}),cursor.remove(),overlay.remove(),n()},returnToMousePosition=function(n){cursor.animate({left:mousePosition.x,top:mousePosition.y},{duration:animationDuration,specialEasing:{left:animationEasing,top:animationEasing},step:function(n,t){t.end="left"===t.prop?mousePosition.x:mousePosition.y},complete:n})},move=function(n,t){var o=parseInt(n.duration)||animationDuration,e=parseInt(n.easing)||animationEasing;"selector"in n?(lastTargettedElement=$(n.selector),cursor.animate({left:lastTargettedElement.offset().left+lastTargettedElement.width()/2+cursor.width()/2,top:lastTargettedElement.offset().top+lastTargettedElement.height()/2+cursor.height()/5},{duration:o,specialEasing:{left:e,top:e},step:function(){isDragging===!0&&elementDragged.simulate("drag",{dx:0,dy:0})},complete:t})):(console.warn("Didn't provide CSS selector for cursor to move on. Skipping."),t())},click=function(n,t){lastTargettedElement.click(),t()},drag=function(n,t){isDragging=!0,elementDragged=lastTargettedElement,elementDragged.bind("drag",onDragCustomEvent),t()},drop=function(n,t){elementDragged.unbind("drag"),isDragging=!1,elementDragged=null,t()},wait=function(n,t){var o=parseInt(n.duration)||animationDuration;setTimeout(t,o)};return{setOptions:function(n){if((null===n||"undefined"==typeof n)&&(n={}),"animDuration"in n&&(animationDuration=0/0!==parseInt(n.animDuration)?n.animDuration:animationDuration),"animEasing"in n&&(animationEasing=void 0!==$.easing[n.animEasing]?n.animEasing:animationEasing),"animCursor"in n){var t=new Image;t.src=n.animCursor,animationCursor=0!=t.height?n.animCursor:animationCursor}if("data"in n)try{events=loadProcess(n.data)}catch(o){console.error(o.name+" : "+o.message),events=null}},start:function(){null!==events&&events!=={}?(animating=!0,async.series(events,function(n){console.log(null===n?"animation complete":"Error : "+n),animating=!1})):console.warn("start was called but the list of events was empty or inexistant.")},pause:function(){cursor.pause()},resume:function(){cursor.resume()},stop:function(){cursor.stop()},move:move,click:click,drag:drag,drop:drop,wait:wait}}();